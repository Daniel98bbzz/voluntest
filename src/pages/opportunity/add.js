import Head from "next/head";
import Header from "../../../public/Components/Header";
import Footer from "../../../public/Components/Footer";
import { useState } from "react";
import jwt from "jsonwebtoken";

export async function getServerSideProps(context) {
  const { req } = context;

  try {
    const jwtSession = req.cookies.jwtSession;
    const userSession = jwt.decode(jwtSession);

    return {
      props: {
        user: JSON.stringify(userSession) || "null",
      },
    };
  } catch (error) {
    return {
      props: {
        user: "null",
      },
    };
  }
}

export default function AddOpportunity({ user }) {
  let userData;
  let blockPage = true;

  if (user != "null") {
    userData = JSON.parse(user);
    if (userData.role == "farmer") {
      blockPage = false;
    }
  }

  const [formData, setFormData] = useState({
    title: "",
    location: "",
    description: "",
    header_image: "",
    rating_score: "",
    total_reviews: "",
    price_per_week: "",
    currency: "",
    duration_min: "",
    duration_max: "",
    minimum_age: "",
    services: "",
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const res = await fetch("/api/opportunity", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(formData),
      });

      const data = (res = await res.json());
    } catch (error) {}
    console.log(formData);
  };

  return (
    <>
      <Head>
        <title>Add Volunteer Opportunity</title>
        <meta name="description" content="Generated by react" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Header />

        {blockPage ? (
          <>
            <p style={{ marginTop: 120, textAlign: "center" }}>
              You must be a logged as a farmer to view this page.
            </p>
          </>
        ) : (
          <div style={{ margin: "0px 10px" }}>
            <form
              id="addOpportunityForm"
              className="opportunity-form"
              onSubmit={handleSubmit}
            >
              <h2>Add New Opportunity</h2>
              <input
                type="text"
                name="title"
                placeholder="Title"
                required
                className="form-input"
                onChange={handleChange}
              />
              <input
                type="text"
                name="location"
                placeholder="Location"
                required
                className="form-input"
                onChange={handleChange}
              />
              <textarea
                name="description"
                placeholder="Description"
                required
                className="form-input"
                onChange={handleChange}
              ></textarea>
              <input
                type="text"
                name="header_image"
                placeholder="Header Image URL"
                required
                className="form-input"
                onChange={handleChange}
              />
              <input
                type="number"
                name="rating_score"
                placeholder="Rating Score"
                required
                className="form-input"
                onChange={handleChange}
              />
              <input
                type="number"
                name="total_reviews"
                placeholder="Total Reviews"
                required
                className="form-input"
                onChange={handleChange}
              />
              <input
                type="number"
                name="price_per_week"
                placeholder="Price per Week"
                required
                className="form-input"
                onChange={handleChange}
              />
              <input
                type="text"
                name="currency"
                placeholder="Currency"
                required
                className="form-input"
                onChange={handleChange}
              />
              <input
                type="number"
                name="duration_min"
                placeholder="Minimum Duration (weeks)"
                required
                className="form-input"
                onChange={handleChange}
              />
              <input
                type="number"
                name="duration_max"
                placeholder="Maximum Duration (weeks)"
                required
                className="form-input"
                onChange={handleChange}
              />
              <input
                type="number"
                name="minimum_age"
                placeholder="Minimum Age"
                required
                className="form-input"
                onChange={handleChange}
              />
              <input
                type="text"
                name="services"
                placeholder="Services (comma-separated)"
                required
                className="form-input"
                onChange={handleChange}
              />
              <button type="submit" className="submit-button">
                Add Opportunity
              </button>
            </form>
          </div>
        )}

        <Footer />
      </main>
    </>
  );
}
