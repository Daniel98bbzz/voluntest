import Head from "next/head";
import Header from "../../public/Components/Header";
import Footer from "../../public/Components/Footer";
import { useState } from "react";
import Link from "next/link";
import { useRouter } from "next/router";
import jwt from "jsonwebtoken";

export async function getServerSideProps(context) {
  const { req } = context;

  try {
    const jwtSession = req.cookies.jwtSession;
    const userSession = jwt.decode(jwtSession);

    const userData = JSON.stringify(userSession);

    if (userData != "null") {
      return {
        redirect: {
          destination: "/",
          permanent: false,
        },
      };
    }
    return {
      props: {
        user: JSON.stringify(userSession) || "null",
      },
    };
  } catch (error) {
    return {
      props: {
        user: "null",
      },
    };
  }
}

export default function Login({ user }) {
  const [formData, setFormData] = useState({
    email: "",
    password: "",
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };
  const route = useRouter();

  const handleSubmit = (e) => {
    e.preventDefault();
    const userLogin = async () => {
      const res = await fetch("/api/users/login", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      });

      if (!res.ok) {
        const responseData = await res.json();
        console.log(responseData);
      }

      const responseData = await res.json();

      if (responseData.message) {
        route.push("/applications");
      }
    };

    if (formData.email && formData.password) userLogin();
  };

  return (
    <>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by react" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Header />

        <div className="container-login">
          <h2>Login</h2>
          <form id="loginForm" onSubmit={handleSubmit}>
            <input
              type="email"
              id="email"
              name="email"
              placeholder="Email"
              required
              className="form-input"
              onChange={handleChange}
            />
            <input
              type="password"
              id="password"
              name="password"
              placeholder="Password"
              required
              className="form-input"
              onChange={handleChange}
            />
            <input type="submit" value="Login" className="submit-button" />
          </form>
          <p>
            Don&apos;t have an account?{" "}
            <Link href="/register" passHref>
              Register here
            </Link>
          </p>
        </div>
        <Footer />
      </main>
    </>
  );
}
